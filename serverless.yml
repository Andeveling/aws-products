# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: andeveling
# "service" is the name of this project. This will also be added to your AWS resource names.
service: aws-ecommerce-products-crud


provider:
  name: aws
  runtime: nodejs20.x
  region: sa-east-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:sa-east-1:531334400435:table/ProductsDynamoDbTable"
  deploymentBucket:
    name: serverless-andres-test 
  

functions:
  # Endpoint para un saludo
  hello:
    handler: src/hello.hello
    events:
      - httpApi:
          path: /
          method: get

  # Crear un nuevo producto
  addProduct:
    handler: src/addProduct.addProduct
    events:
      - httpApi:
          path: /products
          method: post
  
  # Obtener lista de todos los productos
  getProducts:
    handler: src/getProducts.getProducts
    events:
      - httpApi:
          path: /products
          method: get
  
  # Obtener un producto por ID
  getProductById:
    handler: src/getProductById.getProductById
    events:
      - httpApi:
          path: /products/{id}
          method: get

  # Actualizar un producto por ID
  updateProduct:
    handler: src/updateProduct.updateProduct
    events:
      - httpApi:
          path: /products/{id}
          method: put

  # Eliminar un producto por ID
  deleteProduct:
    handler: src/deleteProduct.deleteProduct
    events:
      - httpApi:
          path: /products/{id}
          method: delete



resources:
  Resources:
    ProductsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsDynamoDbTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
